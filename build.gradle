plugins {
	id 'java'
//	id 'org.springframework.boot' version '3.1.2'
	id 'org.springframework.boot' version '2.3.1.RELEASE'
//	id 'io.spring.dependency-management' version '1.1.2'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}
group = 'hello'
version = '0.0.1-SNAPSHOT'
// File > ProjectStructure > Project > SDK, Language Level: jdk 11
// Gradle > Gradle Settings > Gradle JVM : jdk 11
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	developmentOnly("org.springframework.boot:spring-boot-devtools")
}

tasks.named('test') {
	useJUnitPlatform()
}

// 빌드 완료
// BUILD SUCCESSFUL in 18s

// 원인
// 1. Spring Boot 3.x 버전은 JDK 17 이상만 지원
// => JDK 11을 사용하기 위해서는, Spring 버전을 2.x 로 변경
// 변경 방법
//	id 'org.springframework.boot' version '3.1.2'
//  => id 'org.springframework.boot' version '2.3.1.RELEASE'
//	id 'io.spring.dependency-management' version '1.1.2'
//  => id 'io.spring.dependency-management' version '1.0.9.RELEASE'

// 2. JDK 17 => JDK 11 변경 (Spring Boot 2.X는 JDK 11에서 호환)
// File > ProjectStructure > Project > SDK, Language Level: jdk 11
// Gradle > Gradle Settings > Gradle JVM : jdk 11
// sourceCompatibility = '11'

// 3. Gradle 버전 변경
// Intellij에서 Gradle을 자동으로 설치...
// 자동으로 설치되는 버전은 gradle/wrapper/gradle-wrapper.properties distributionUrl의 끝자리를 통해 확인 가능
// 기존 버전? 에서 6.8.3 버전으로 변경